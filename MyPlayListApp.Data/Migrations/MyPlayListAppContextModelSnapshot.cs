// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPlayListApp.Data.Context;

#nullable disable

namespace MyPlayListApp.Data.Migrations
{
    [DbContext(typeof(MyPlayListAppContext))]
    partial class MyPlayListAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e8aac6d-b912-470e-8b94-d24c5864b010"),
                            Name = "Tragedy"
                        },
                        new
                        {
                            Id = new Guid("fd43a5ee-bd48-4858-a817-4bd3c05a9f62"),
                            Name = "Rock"
                        },
                        new
                        {
                            Id = new Guid("2bacf241-d7dd-4c47-b2ec-a0fb3624bd16"),
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Singer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Singers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("785ede46-ebc5-4e0d-9722-88f052677543"),
                            DateOfBirth = new DateOnly(1977, 8, 11),
                            Image = "D:\\PlayListApp\\Images\\TamerHosny.jpg",
                            Name = "Tamer Hosny"
                        },
                        new
                        {
                            Id = new Guid("a61a7b3a-ffb8-41d5-9b90-ecc2f57ade36"),
                            DateOfBirth = new DateOnly(1975, 11, 4),
                            Image = "D:\\PlayListApp\\Images\\MohamedHamaki.jpg",
                            Name = "Mohamed Hamaki"
                        },
                        new
                        {
                            Id = new Guid("7970bcbe-64ac-465c-94f5-42f4fd6d0d43"),
                            DateOfBirth = new DateOnly(1980, 10, 10),
                            Image = "D:\\PlayListApp\\Images\\SherineAbdelWahab.jpg",
                            Name = "Sherine Abdel Wahab"
                        });
                });

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Song", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("SingerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SingerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4adb51d5-5657-49a1-883f-8e346ef10ee8"),
                            CategoryId = new Guid("6e8aac6d-b912-470e-8b94-d24c5864b010"),
                            Name = "Naseeny Leeh",
                            SingerId = new Guid("785ede46-ebc5-4e0d-9722-88f052677543")
                        },
                        new
                        {
                            Id = new Guid("d8fe7301-11e4-45a2-a0d6-add109cbff96"),
                            CategoryId = new Guid("fd43a5ee-bd48-4858-a817-4bd3c05a9f62"),
                            Name = "Bahebak Kol Youm",
                            SingerId = new Guid("a61a7b3a-ffb8-41d5-9b90-ecc2f57ade36")
                        },
                        new
                        {
                            Id = new Guid("6e201f3c-f7a7-4c46-9360-bb2e485a8ff5"),
                            CategoryId = new Guid("2bacf241-d7dd-4c47-b2ec-a0fb3624bd16"),
                            Name = "Mashaer",
                            SingerId = new Guid("7970bcbe-64ac-465c-94f5-42f4fd6d0d43")
                        });
                });

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Song", b =>
                {
                    b.HasOne("MyPlayListApp.Data.Entities.Category", "Category")
                        .WithMany("Songs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyPlayListApp.Data.Entities.Singer", "Singer")
                        .WithMany("Songs")
                        .HasForeignKey("SingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Singer");
                });

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Category", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("MyPlayListApp.Data.Entities.Singer", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
